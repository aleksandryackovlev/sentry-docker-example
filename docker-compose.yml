version: '3.4'

x-sentry-defaults: &sentry_defaults
  build: 
    context: ./sentry
  depends_on:
    - redis
    - postgres-test
    - minio-server
  environment:
    SENTRY_SECRET_KEY: some-secret-key
    SENTRY_REDIS_HOST: redis
    SENTRY_DB_NAME: sent
    SENTRY_DB_USER: sent
    SENTRY_POSTGRES_HOST: postgres-test
    MINIO_HOST: http://minio-server:9000
    MINIO_ACCESS_KEY: minio-access-key
    MINIO_SECRET_KEY: minio-secret-key
    MINIO_BUCKET: sentry
  volumes:
    - sentry-data:/data

x-app-defaults: &app_defaults
  image: node:12
  volumes:
    - ./example-app:/usr/src/service/
  working_dir: /usr/src/service/

services:
  sentry-web:
    << : *sentry_defaults
    container_name: sentry-web
    ports:
      - "8080:9000"

  sentry-worker:
    << : *sentry_defaults
    command: run worker

  sentry-cron:
    << : *sentry_defaults
    command: run cron

  minio-server:
    image: minio/minio
    container_name: s3-server
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio-access-key
      MINIO_SECRET_KEY: minio-secret-key
    volumes:
      - minio-data:/data
    command: server /data

  redis:
    image: redis:5.0-alpine
    volumes:
      - sentry-redis:/data

  postgres-test:
    image: postgres
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: sent
      POSTGRES_DB: sent
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - sentry-postges:/var/lib/postgresql/data

  app-install:
    << : *app_defaults
    command: yarn install

  app-build:
    << : *app_defaults
    depends_on:
      - sentry-web
    command: yarn build
    environment:
      NODE_ENV: production

  app-build:
    << : *app_defaults
    depends_on:
      - sentry-web
    command: yarn start
    environment:
      NODE_ENV: production

volumes:
  sentry-data:
  sentry-postges:
  sentry-redis:
  minio-data:
